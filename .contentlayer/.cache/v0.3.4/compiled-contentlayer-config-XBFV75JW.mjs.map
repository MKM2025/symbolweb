{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeSlug from 'rehype-slug';\n\nexport const Blog = defineDocumentType(() => ({\n  name: 'Blog',\n  filePathPattern: `blog/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    summary: { type: 'string', required: false },\n    tags: { type: 'list', of: { type: 'string' } },\n    author: { type: 'string', required: true },\n    image: { type: 'string', required: false },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/insights/blogs/${doc._raw.flattenedPath.replace('blog/', '')}`,\n    },\n    readingTime: {\n      type: 'json',\n      resolve: (doc) => {\n        const content = doc.body.raw;\n        const wordsPerMinute = 200;\n        const words = content.split(/\\s+/).length;\n        const minutes = Math.ceil(words / wordsPerMinute);\n        return {\n          text: `${minutes} min read`,\n          minutes: minutes,\n          time: minutes * 60 * 1000,\n          words: words,\n        };\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Blog],\n  mdx: {\n    rehypePlugins: [rehypeSlug, rehypeAutolinkHeadings],\n  },\n  disableImportAliasWarning: true,\n  onSuccess: async () => {\n    console.log('Contentlayer build completed successfully');\n    return Promise.resolve();\n  },\n}); "],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,gBAAgB;AAEhB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,SAAS,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC3C,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC7C,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,OAAO,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAC3C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,mBAAmB,IAAI,KAAK,cAAc,QAAQ,SAAS,EAAE,CAAC;AAAA,IAClF;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,UAAU,IAAI,KAAK;AACzB,cAAM,iBAAiB;AACvB,cAAM,QAAQ,QAAQ,MAAM,KAAK,EAAE;AACnC,cAAM,UAAU,KAAK,KAAK,QAAQ,cAAc;AAChD,eAAO;AAAA,UACL,MAAM,GAAG,OAAO;AAAA,UAChB;AAAA,UACA,MAAM,UAAU,KAAK;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,YAAY,sBAAsB;AAAA,EACpD;AAAA,EACA,2BAA2B;AAAA,EAC3B,WAAW,YAAY;AACrB,YAAQ,IAAI,2CAA2C;AACvD,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF,CAAC;",
  "names": []
}
